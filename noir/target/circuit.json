{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":15104949504560918987,"abi":{"parameters":[{"name":"version","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"initial_state_len","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"initial_state","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"next_state_len","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"next_state","type":{"kind":"array","length":4,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"identity_len","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"identity","type":{"kind":"string","length":256},"visibility":"public"},{"name":"tx_hash","type":{"kind":"string","length":64},"visibility":"public"},{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"blob_number","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"blob_index","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"blob_contract_name_len","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"blob_contract_name","type":{"kind":"string","length":256},"visibility":"public"},{"name":"blob_capacity","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"blob_len","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"blob","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"tx_blob_count","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},{"name":"success","type":{"kind":"boolean"},"visibility":"public"},{"name":"positionX","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"positionY","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"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","debug_symbols":"tdXJioQwEAbgd8nZQ/bFVxmGxiU2AVFxGRik331iM8kIlVOG3KzEL78UFTxRb9vj+XDTMG+o/jjROHfN7ubJVyeSRLwXt6WZrnrbm3VHNRHMVMhO/fUo+KtCgxstqiV5fVYeyTSSOiKNAVJpZHhA/lyAdBJJhiPiBiCTRpJFpEESxTmI5CCag1gSKRwboShoOeU5SOQgmYPSE6FYnAglGEDpiVBSRaQJQOmJUEYEpAlALD0Rmv4hDj6PkRyUnggtSERa3FEFXzYq3FiKMWg1Y8UTePEEUTxB/juBYk5jggDXmKniCbp4gima4It2dePono/7r8ovfzWra9rR/pbDMXW33f17CTvBL+vc2f5Y7XXSe88f/wM=","file_map":{"61":{"source":"// Simple Token Contract implementation in Noir\n\nfn main(\n    // The version of the HyleOutput. This is unchecked for now.\n    version: pub u32,\n    // The initial state of the contract. This is the state before the transaction is executed.\n    initial_state_len: pub u32,\n    initial_state: pub [u8; 4],\n    // The state of the contract after the transaction is executed.\n    next_state_len: pub u32,\n    next_state: pub [u8; 4],\n    // The identity used to execute the transaction. This is the same as the one used in the\n    // BlobTransaction.\n    identity_len: pub u8,\n    identity: pub str<256>,\n    // TxHash of the BlobTransaction.\n    tx_hash: pub str<64>,\n    // ------ Blobs ------\n    // The index of the blob being executed.\n    index: pub u32,\n    // Number of blobs used by the contract\n    // If blob_number is > 1, then you need multiple occurence of parameters group \"Blob\"\n    blob_number: pub u32,\n    // --- Blob\n    // At least one blob_index must match the index parameter\n    blob_index: pub u32,\n    blob_contract_name_len: pub u8,\n    blob_contract_name: pub str<256>,\n    blob_capacity: pub u32,\n    blob_len: pub u32,\n    blob: pub [u8; 32],\n    // ---\n    // Number of blobs in the transaction. tx_blob_count >= blob_number\n    tx_blob_count: pub u32,\n    // -------------------\n    // Weither the execution was successful or not. If false, the BlobTransaction will be\n    // settled as failed.\n    success: pub bool,\n    // ------ Private inputs ------\n    positionX: u32,\n    positionY: u32,\n) {\n\n    assert(success == true);\n    assert(version == 1);\n    assert(initial_state_len == 4);\n    assert(next_state_len == 4);\n    assert(initial_state == [0; 4]);\n    assert(next_state == [0; 4]);\n    assert(blob_capacity == 32);\n    assert(blob_len == 32);\n    assert(blob_number == 1);\n    assert(tx_blob_count >= 1);\n\n    check_limits(positionX, positionY);\n}\n\nfn check_limits(positionX: u32, positionY: u32) {\n    assert(positionX >= 0);\n    assert(positionX as u32 <= 9);\n    assert(positionY >= 0);\n    assert(positionY <= 9);\n}","path":"/home/laurip/src/mini/zkhackproj/noir/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert","directive_integer_quotient"]}